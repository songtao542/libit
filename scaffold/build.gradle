plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
    id 'kotlin-allopen'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.protobuf'
    id 'androidx.navigation.safeargs'
}

static def buildTime() {
    return new Date().format("yyMMdd", TimeZone.getTimeZone("GMT+08:00"))
}

static def getCurrentTime() {
    return new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("GMT+08:00"))
}

preBuild {
    StringBuilder time = new StringBuilder()
    time.append("======================================\n")
    time.append("====pre build: ${getCurrentTime()}====\n")
    time.append("======================================\n")
    System.out.println(time)
}

gradle.addBuildListener(new BuildAdapter() {
    @Override
    void buildFinished(BuildResult result) {
        StringBuilder time = new StringBuilder()
        time.append("======================================\n")
        time.append("====end build: ${getCurrentTime()}====\n")
        time.append("======================================\t")
        System.out.println(time)
    }
})

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.scaffold"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0_" + buildTime()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('./test.keystore')
            storePassword 'android'
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation('androidx.activity:activity:1.2.3')
    implementation('androidx.activity:activity-ktx:1.2.3')
    implementation('androidx.core:core:1.5.0')
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation "androidx.fragment:fragment-ktx:1.3.5"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.annotation:annotation:1.2.0'
    //implementation "androidx.viewpager2:viewpager2:1.1.0-alpha01"

    // glide库
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'

    //implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.2.1"
    //implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:1.0.0"

    //https://github.com/material-components/material-components-android
    implementation 'com.google.android.material:material:1.4.0-beta01'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation "com.google.dagger:hilt-android:2.33-beta"
    kapt "com.google.dagger:hilt-android-compiler:2.33-beta"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0-alpha03"
    //implementation "androidx.hilt:hilt-navigation-compose:1.0.0-alpha01"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"
    implementation "io.reactivex.rxjava2:rxjava:2.2.9"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.0"
    implementation "io.reactivex.rxjava2:rxkotlin:2.2.0"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:2.3.1"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:2.2.0"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"

    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    implementation("androidx.recyclerview:recyclerview:1.2.1") {
        version {
            strictly '[1.2.0]'
            prefer '1.2.0'
        }
    }

    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    def nav_version = "2.3.5"
    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    //Retrofit网络请求
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    //implementation 'com.squareup.retrofit2:converter-scalars:2.0.0-beta4'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    //implementation 'com.squareup.retrofit2:converter-scalars:2.0.0-beta4'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    //https://github.com/google/flexbox-layout
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    // Typed DataStore (Typed API surface, such as Proto)
    implementation "androidx.datastore:datastore:1.0.0-alpha06"
    // optional - RxJava2 support
    implementation "androidx.datastore:datastore-rxjava2:1.0.0-alpha06"
    // optional - RxJava3 support
    implementation "androidx.datastore:datastore-rxjava3:1.0.0-alpha06"
    // Alternatively - use the following artifact without an Android dependency.
    implementation "androidx.datastore:datastore-core:1.0.0-alpha06"

    implementation "com.google.protobuf:protobuf-javalite:3.10.0"
    //implementation  "com.google.protobuf.nano:protobuf-javanano:3.0.0-alpha-7"

    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha06"
    // optional - RxJava2 support
    implementation "androidx.datastore:datastore-preferences-rxjava2:1.0.0-alpha06"
    // optional - RxJava3 support
    implementation "androidx.datastore:datastore-preferences-rxjava3:1.0.0-alpha06"
    // Alternatively - use the following artifact without an Android dependency.
    implementation "androidx.datastore:datastore-preferences-core:1.0.0-alpha06"

    def work_version = "2.5.0"
    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - GCMNetworkManager support
    //implementation "androidx.work:work-gcm:$work_version"

    //https://github.com/youth5201314/banner
    implementation 'io.github.youth5201314:banner:2.2.2'

    implementation files("./libs/scaffold.aar")

    implementation project(':scaffold_network')

    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    implementation 'commons-codec:commons-codec:1.15'

}