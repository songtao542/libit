apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion 30
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    /*androidExtensions {
        experimental = true
    }*/

    libraryVariants.all { variant ->
        variant.assemble.doLast {
            variant.outputs.all { output ->
                if (output.outputFileName.contains("debug")) {
                    // output project-directory/build/outputs/aar/debug
                    def outputPath = [project.rootDir.absolutePath, "build", "outputs", "aar", "debug"].join(File.separator)
                    copy {
                        from output.outputFile
                        into outputPath
                    }
                } else {
                    // output project-directory/build/outputs/aar/release
                    def outputPath = [project.rootDir.absolutePath, "build", "outputs", "aar", "release"].join(File.separator)
                    copy {
                        from output.outputFile
                        into outputPath
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.0-RC"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.fragment:fragment-ktx:1.3.4'

    //高德地图
    implementation 'com.amap.api:location:4.9.0'
    implementation 'com.amap.api:map2d:6.0.0'
    implementation 'com.amap.api:search:7.3.0'

    implementation "io.nlopez.smartlocation:library:3.3.3"
    //implementation "io.nlopez.smartlocation:rx:3.3.3"
    //implementation "io.reactivex.rxjava2:rxkotlin:2.2.0"

    implementation "com.google.android.material:material:1.3.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"

    implementation project(":viewbinding")

    //implementation "com.google.dagger:dagger:2.17"
    //implementation "com.google.dagger:dagger-android:2.17"
    //implementation "com.google.dagger:dagger-android-support:2.17"
    //kapt "com.google.dagger:dagger-android-processor:2.17"
    //kapt "com.google.dagger:dagger-compiler:2.17"

}
