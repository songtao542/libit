apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-parcelize'

apply from: "../config.gradle"

android {
    compileSdk project.ext.compile_sdk

    namespace 'com.liabit.location'

    defaultConfig {
        minSdk 14
        targetSdk project.ext.target_sdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    /*androidExtensions {
        experimental = true
    }*/

    libraryVariants.all { variant ->
        variant.assemble.doLast {
            variant.outputs.all { output ->
                if (output.outputFileName.contains("debug")) {
                    // output project-directory/build/outputs/aar/debug
                    def outputPath = [project.rootDir.absolutePath, "build", "outputs", "aar", "debug"].join(File.separator)
                    copy {
                        from output.outputFile
                        into outputPath
                    }
                } else {
                    // output project-directory/build/outputs/aar/release
                    def outputPath = [project.rootDir.absolutePath, "build", "outputs", "aar", "release"].join(File.separator)
                    copy {
                        from output.outputFile
                        into outputPath
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:${project.androidx_appcompat__appcompat}"
    implementation "androidx.core:core-ktx:${project.androidx_core__core_ktx}"
    testImplementation "junit:junit:${project.junit__junit}"
    androidTestImplementation "androidx.test.ext:junit:${project.androidx_test_ext__junit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${project.androidx_test_espresso__espresso_core}"

    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${project.androidx_lifecycle__lifecycle_viewmodel_ktx}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${project.androidx_lifecycle__lifecycle_viewmodel_ktx}"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.0-RC"
    implementation "androidx.lifecycle:lifecycle-extensions:${project.androidx_lifecycle__lifecycle_extensions}"

    implementation "androidx.core:core-ktx:${project.androidx_core__core_ktx}"
    implementation "androidx.fragment:fragment-ktx:${project.androidx_fragment__fragment_ktx}"

    //高德地图
    implementation "com.amap.api:location:${project.com_amap_api__location}"
    implementation "com.amap.api:map2d:${project.com_amap_api__map2d}"
    implementation "com.amap.api:search:${project.com_amap_api__search}"

    implementation "io.nlopez.smartlocation:library:${project.io_nlopez_smartlocation__library}"
    //implementation "io.nlopez.smartlocation:rx:${project.io_nlopez_smartlocation__rx}"
    //implementation "io.reactivex.rxjava2:rxkotlin:${project.io_reactivex_rxjava2__rxkotlin}"

    implementation "com.google.android.material:material:${project.com_google_android_material__material}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${project.androidx_lifecycle__lifecycle_common_java8}"

    implementation project(":viewbinding")

    //implementation "com.google.dagger:dagger:${project.com_google_dagger__dagger}"
    //implementation "com.google.dagger:dagger-android:${project.com_google_dagger__dagger_android}"
    //implementation "com.google.dagger:dagger-android-support:${project.com_google_dagger__dagger_android_support}"
    //kapt "com.google.dagger:dagger-android-processor:${project.com_google_dagger__dagger_android_processor}"
    //kapt "com.google.dagger:dagger-compiler:${project.com_google_dagger__dagger_compiler}"

}
