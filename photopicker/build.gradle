plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
}

apply from: "../config.gradle"

android {
    compileSdk project.ext.compile_sdk

    namespace 'com.liabit.photopicker'

    defaultConfig {
        minSdk 23
        targetSdk project.ext.target_sdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${project.org_jetbrains_kotlinx__kotlinx_coroutines_core}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${project.org_jetbrains_kotlinx__kotlinx_coroutines_android}"

    implementation "androidx.core:core-ktx:${project.androidx_core__core_ktx}"
    implementation "androidx.appcompat:appcompat:${project.androidx_appcompat__appcompat}"
    implementation "com.google.android.material:material:${project.com_google_android_material__material}"
    implementation "com.github.bumptech.glide:glide:${project.com_github_bumptech_glide__glide}"

    //implementation "com.google.android:flexbox:${project.com_google_android__flexbox}"
    compileOnly files('../common_libs/flexbox-release.aar')

    compileOnly project(':ext')
    compileOnly project(":matisse")
    compileOnly project(':photoview')

    testImplementation "junit:junit:${project.junit__junit}"
    androidTestImplementation "androidx.test.ext:junit:${project.androidx_test_ext__junit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${project.androidx_test_espresso__espresso_core}"
}

if (file('binary-config.gradle').exists() && file('../binary-common.gradle').exists()) {
    apply from: '../binary-common.gradle'
}