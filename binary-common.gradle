if (file(project.projectDir.getAbsolutePath() + File.separator + 'internal-config.gradle').exists()) {
    apply from: project.projectDir.getAbsolutePath() + File.separator + 'internal-config.gradle'
}

group = PROJ_GROUP
version = PROJ_VERSION
project.archivesBaseName = PROJ_ARTIFACTID

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka'

dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}

task generateSourcesJar(type: Jar) {
    group = 'jar'
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sources")
}

task generateJavadoc(type: Jar, dependsOn: dokkaJavadoc) {
    group = 'jar'
    archiveClassifier.set("javadoc")
    from "$buildDir/dokka"
}

artifacts {
    archives generateJavadoc
    archives generateSourcesJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            name PROJ_NAME
            description PROJ_DESCRIPTION
            url PROJ_WEBSITEURL
            inceptionYear '2016'

            packaging 'aar'
            groupId PROJ_GROUP
            artifactId PROJ_ARTIFACTID
            version PROJ_VERSION

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                connection PROJ_VCSURL
                url PROJ_WEBSITEURL
            }
            developers {
                developer {
                    id DEVELOPER_ID
                    name DEVELOPER_NAME
                    email DEVELOPER_EMAIL
                }
            }
        }
    }
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    // Bintray的用户名
    user = properties.getProperty("bintray.user")
    // Bintray的ApiKey
    key = properties.getProperty("bintray.apikey")
    if (user == null || user.isEmpty()) {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : BINTRAY_USER
    }
    if (key == null || key.isEmpty()) {
        key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : BINTRAY_KEY
    }

    configurations = ['archives']

    dryRun = false
    publish = true

    pkg {
        repo = BINTRAY_REPO   //仓库名
        name = PROJ_NAME
        userOrg = BINTRAY_USER_ORG
        licenses = ['Apache-2.0']
        vcsUrl = PROJ_VCSURL
        websiteUrl = PROJ_WEBSITEURL
        issueTrackerUrl = PROJ_ISSUETRACKERURL
        publicDownloadNumbers = true
        override = true // 覆盖已有版本
        publish = true // 是否是公开项目
        version {
            name = PROJ_VERSION
            desc = PROJ_DESCRIPTION
            vcsTag = PROJ_VERSION

            gpg {
                sign = true
            }
        }
    }
}

//以下内容用于发布SNAPSHOT版本，如果不需要可以移除。
//参考自：https://www.jfrog.com/confluence/display/RTF/Gradle+Artifactory+Plugin
if (!CONTEXT_URL.isEmpty()) {
    apply plugin: "com.jfrog.artifactory"
    artifactory {
        contextUrl = CONTEXT_URL
        resolve {
            repository {
                repoKey = 'libs-release'
            }
        }
        publish {
            repository {
                repoKey = REPOKEY //The Artifactory repository key to publish to
                username = ARTIFACTORY_USERNAME
                password = ARTIFACTORY_PASSWORD
                maven = true
            }
            defaults {
                //这里的名字和前面bintray.configurations的值一致即可，会将其包含的输出上传到jfrog上去
                publishConfigs('archives')
            }
        }
    }
}

if (file(project.projectDir.getAbsolutePath() + '/../internal-common.gradle').exists()) {
    apply from: project.projectDir.getAbsolutePath() + '/../internal-common.gradle'
}
