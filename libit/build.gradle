apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'

apply from: "../config.gradle"

android {
    compileSdk project.ext.compile_sdk

    namespace 'com.liabit'

    defaultConfig {
        minSdk 21
        targetSdk project.ext.target_sdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    libraryVariants.all { variant ->
        variant.assemble.doLast {
            variant.outputs.all { output ->
                if (output.outputFileName.contains("release")) {
                    System.out.println("output.outputFile: " + output.outputFile.parentFile.parentFile)
                    def outputPath = [output.outputFile.parentFile.parentFile.parentFile, "libs"].join(File.separator)
                    copy {
                        from output.outputFile
                        into outputPath
                        rename { String fileName ->
                            fileName.replace("-release", "")
                        }
                    }
                }
            }
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['./src/main/jniLibs']
            res.srcDirs = [
                    './src/main/res', // viewbinding
                    './src/main/addsub_res', // addsub
                    './src/main/tagview_res', // tagview
                    './src/main/filterlayout_res', // filterlayout
                    './src/main/viewbinding_res', // viewbinding
                    './src/main/viewmodel_res', // viewmodel
                    './src/main/widget_res', // widget
                    './src/main/widget_label_view_res', // widget_label_view
                    './src/main/widget_empty_view_res', // widget_empty_view
                    './src/main/widget_progress_button_res', // widget_progress_button
                    './src/main/widget_spring_button_res', // widget_spring_button
                    './src/main/widget_state_button_res', // widget_state_button
                    './src/main/recyclerview_res', // recyclerview
                    './src/main/timerview_res', // timerview
                    './src/main/ext_res', // ext
                    './src/main/popup_res', // popup
                    './src/main/citypicker_res', // citypicker
                    './src/main/picker_res', // picker
                    './src/main/numberpicker_res', // picker
                    './src/main/picker_integrate_res', // picker_integrate
                    './src/main/photopicker_res', // photopicker
                    './src/main/photoview_res', // photoview
                    './src/main/dialog_res', // dialog
                    './src/main/screenrecord_res', // screenrecord
                    './src/main/base_res', // base
                    './src/main/base_with_viewbinding_res', // base_with_viewbinding
                    './src/main/base_with_viewmodel_res', // base_with_viewmodel
                    './src/main/base_with_vb_vm_res', // base_with_vb_vm
                    './src/main/third-auth_res', // third-auth
                    './src/main/matisse_res', // matisse
                    './src/main/matisse_crop_res', // matisse_crop
                    './src/main/utils_res', // utils
                    './src/main/location_picker_res', // utils
                    './src/main/flag-square_res', // flag-square
                    './src/main/flag_res', // flag
                    './src/main/imageloader_res', // flag
            ]
            java.srcDirs = [
                    './src/main/addsub', // addsub
                    './src/main/tagview', // tagview
                    './src/main/filterlayout', // filterlayout
                    './src/main/viewbinding', // viewbinding
                    './src/main/viewmodel', // viewmodel
                    './src/main/widget', // widget
                    './src/main/widget_label_view', // widget_label_view
                    './src/main/widget_empty_view', // widget_empty_view
                    './src/main/widget_progress_button', // widget_progress_button
                    './src/main/widget_spring_button', // widget_spring_button
                    './src/main/widget_state_button', // widget_state_button
                    './src/main/recyclerview', // recyclerview
                    './src/main/timerview', // timerview
                    './src/main/ext', // ext
                    './src/main/popup', // popup
                    './src/main/citypicker', // citypicker
                    './src/main/picker', // picker
                    './src/main/numberpicker', // picker
                    './src/main/picker_integrate', // picker_integrate
                    './src/main/photopicker', // photopicker
                    './src/main/photoview', // photoview
                    './src/main/dialog', // dialog
                    './src/main/screenrecord', // screenrecord
                    './src/main/autoclear', // autoclear
                    './src/main/livedata-ktx', // livedata-ktx
                    './src/main/viewmodel_inject', // injectable-viewmodel
                    './src/main/base', // base
                    './src/main/base_with_viewbinding', // base_with_viewbinding
                    './src/main/base_with_viewmodel', // base_with_viewbinding
                    './src/main/base_with_vb_vm', // base_with_vb_vm
                    './src/main/third-auth', // third-auth
                    './src/main/compressor', // compressor
                    './src/main/matisse', // matisse
                    './src/main/matisse_crop', // matisse_crop
                    './src/main/retrofit-ext', // retrofit-ext
                    './src/main/utils', // utils
                    './src/main/location_picker', // location_picker
                    './src/main/flag-square', // flag-square
                    './src/main/flag', // flag
                    './src/main/imageloader', // flag
            ]
            manifest.srcFile './src/main/AndroidManifest.xml'
        }
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:${project.androidx_appcompat__appcompat}"
    implementation "com.google.android.material:material:${project.com_google_android_material__material}"

    implementation "androidx.dynamicanimation:dynamicanimation:${project.androidx_dynamicanimation__dynamicanimation}"
    implementation "androidx.annotation:annotation:${project.androidx_annotation__annotation}"
    implementation "androidx.interpolator:interpolator:${project.androidx_interpolator__interpolator}"
    implementation "androidx.constraintlayout:constraintlayout:${project.androidx_constraintlayout__constraintlayout}"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${project.org_jetbrains_kotlinx__kotlinx_coroutines_core}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${project.org_jetbrains_kotlinx__kotlinx_coroutines_android}"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:${project.org_jetbrains_kotlinx__kotlinx_serialization_core}"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:${project.androidx_lifecycle__lifecycle_viewmodel_savedstate}"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:${project.androidx_lifecycle__lifecycle_common_java8}"
    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:${project.androidx_lifecycle__lifecycle_service}"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:${project.androidx_lifecycle__lifecycle_process}"

    // ktx
    implementation "androidx.fragment:fragment-ktx:${project.androidx_fragment__fragment_ktx}"
    implementation "androidx.core:core-ktx:${project.androidx_core__core_ktx}"
    implementation "androidx.collection:collection-ktx:${project.androidx_collection__collection_ktx}"
    implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:${project.androidx_lifecycle__lifecycle_livedata_core_ktx}"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${project.androidx_lifecycle__lifecycle_livedata_ktx}"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:${project.androidx_lifecycle__lifecycle_reactivestreams_ktx}"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${project.androidx_lifecycle__lifecycle_runtime_ktx}"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${project.androidx_lifecycle__lifecycle_viewmodel_ktx}"
    implementation "androidx.navigation:navigation-runtime-ktx:${project.androidx_navigation__navigation_runtime_ktx}"
    implementation "androidx.navigation:navigation-fragment-ktx:${project.androidx_navigation__navigation_fragment_ktx}"
    implementation "androidx.navigation:navigation-ui-ktx:${project.androidx_navigation__navigation_ui_ktx}"
    implementation "androidx.paging:paging-common-ktx:${project.androidx_paging__paging_common_ktx}"
    implementation "androidx.paging:paging-runtime-ktx:${project.androidx_paging__paging_runtime_ktx}"
    implementation "androidx.paging:paging-rxjava2-ktx:${project.androidx_paging__paging_rxjava2_ktx}"
    implementation "androidx.palette:palette-ktx:${project.androidx_palette__palette_ktx}"
    implementation "androidx.preference:preference-ktx:${project.androidx_preference__preference_ktx}"
    implementation "androidx.room:room-ktx:${project.androidx_room__room_ktx}"
    implementation "androidx.sqlite:sqlite-ktx:${project.androidx_sqlite__sqlite_ktx}"

    implementation "com.google.dagger:hilt-android:${project.com_google_dagger__hilt_android}"
    kapt "com.google.dagger:hilt-compiler:${project.com_google_dagger__hilt_compiler}"
    //kapt "androidx.hilt:hilt-compiler:${project.androidx_hilt__hilt_compiler}"
    //implementation "androidx.hilt:hilt-lifecycle-viewmodel:${project.androidx_hilt__hilt_lifecycle_viewmodel}"

    //implementation "com.github.promeg:tinypinyin:${project.com_github_promeg__tinypinyin}"
    compileOnly files('../common_libs/tinypinyin-2.0.3.jar')
    //implementation "com.google.android:flexbox:${project.com_google_android__flexbox}"
    compileOnly files('../common_libs/flexbox-release.aar')
    compileOnly files('../common_libs/imagepicker-1.0.0.aar')

    implementation "com.google.dagger:hilt-android:${project.com_google_dagger__hilt_android}"
    kapt "com.google.dagger:hilt-compiler:${project.com_google_dagger__hilt_compiler}"
    //kapt "androidx.hilt:hilt-compiler:${project.androidx_hilt__hilt_compiler}"
    //implementation "androidx.hilt:hilt-lifecycle-viewmodel:${project.androidx_hilt__hilt_lifecycle_viewmodel}"
    //implementation "androidx.hilt:hilt-navigation-compose:${project.androidx_hilt__hilt_navigation_compose}"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${project.androidx_lifecycle__lifecycle_livedata_ktx}"
    implementation "androidx.annotation:annotation:${project.androidx_annotation__annotation}"

    //Retrofit网络请求
    implementation "com.squareup.retrofit2:retrofit:${project.com_squareup_retrofit2__retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${project.com_squareup_retrofit2__converter_gson}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${project.com_squareup_retrofit2__adapter_rxjava2}"
    //implementation "com.squareup.retrofit2:converter-scalars:${project.com_squareup_retrofit2__converter_scalars}"
    implementation "com.squareup.okhttp3:logging-interceptor:${project.com_squareup_okhttp3__logging_interceptor}"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${project.com_jakewharton_retrofit__retrofit2_kotlin_coroutines_adapter}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${project.com_squareup_retrofit2__adapter_rxjava2}"
    //implementation "com.squareup.retrofit2:converter-scalars:${project.com_squareup_retrofit2__converter_scalars}"
    implementation "com.squareup.okhttp3:logging-interceptor:${project.com_squareup_okhttp3__logging_interceptor}"
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation "com.google.code.gson:gson:${project.com_google_code_gson__gson}"

    compileOnly "it.sephiroth.android.library.imagezoom:library:${project.it_sephiroth_android_library_imagezoom__library}"
    compileOnly "com.github.bumptech.glide:glide:${project.com_github_bumptech_glide__glide}"
    compileOnly "com.squareup.picasso:picasso:${project.com_squareup_picasso__picasso}"

    //compileOnly files('../common_libs/open_sdk_r6019_lite.jar')
    compileOnly files('../common_libs/open_sdk_3.5.4.11_r3f56456_lite.jar')
    //compileOnly 'com.sina.weibo.sdk:core:9.12.0:openDefaultRelease@aar'
    compileOnly files("../common_libs/sina-weibo-sdk-10.10.0.aar")
    //implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    implementation "com.tencent.mm.opensdk:wechat-sdk-android-without-mta:${project.com_tencent_mm_opensdk__wechat_sdk_android_without_mta}"

    // Typed DataStore (Typed API surface, such as Proto)
    implementation "androidx.datastore:datastore:${project.androidx_datastore__datastore}"
    // Alternatively - use the following artifact without an Android dependency.
    implementation "androidx.datastore:datastore-core:${project.androidx_datastore__datastore_core}"
    implementation "androidx.datastore:datastore-preferences:${project.androidx_datastore__datastore_preferences}"
    // Alternatively - use the following artifact without an Android dependency.
    implementation "androidx.datastore:datastore-preferences-core:${project.androidx_datastore__datastore_preferences_core}"

    compileOnly files('../common_libs/alipaySdk-15.5.9-20181123210601.aar')

    compileOnly "com.github.bumptech.glide:glide:${project.com_github_bumptech_glide__glide}"

    //高德地图
    implementation "com.amap.api:location:${project.com_amap_api__location}"
    implementation "com.amap.api:map2d:${project.com_amap_api__map2d}"
    implementation "com.amap.api:search:${project.com_amap_api__search}"
    implementation "io.nlopez.smartlocation:library:${project.io_nlopez_smartlocation__library}"
    implementation "io.nlopez.smartlocation:rx:${project.io_nlopez_smartlocation__rx}"

    testImplementation "junit:junit:${project.junit__junit}"
    androidTestImplementation "androidx.test.ext:junit:${project.androidx_test_ext__junit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${project.androidx_test_espresso__espresso_core}"
}

task generateSourcesJar(type: Jar) {
    group = 'jar'
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sources")
}
