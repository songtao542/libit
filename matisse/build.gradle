/*
 * Copyright 2017 Zhihu Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.library'
apply plugin: 'checkstyle'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29

        // add by songtao --start--
        vectorDrawables.useSupportLibrary = true
        /*ndk {
            moduleName "ucrop"        //生成的so文件名字，调用C程序的代码中会用到该名字
            abiFilters 'armeabi-v7a', 'arm64-v8a' //, 'armeabi','x86', 'armeabi-v7a', 'x86_64'
        }
        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
            }
        }*/
        // add by songtao --end--
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }

    // add by songtao --start--
    /*externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }*/
    sourceSets {
        main {
            res.srcDirs = ['src/main/res', 'src_crop/main/res']
            java.srcDirs = ['src/main/java', 'src_crop/main/java']
            jni.srcDirs = []
            jniLibs.srcDirs = ['src_crop/main/jniLibs']
        }
    }
    // add by songtao --end--
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.annotation:annotation:1.2.0"
    implementation "androidx.recyclerview:recyclerview:1.2.0"
    implementation 'it.sephiroth.android.library.imagezoom:library:1.0.4'

    compileOnly 'com.github.bumptech.glide:glide:4.12.0'
    compileOnly 'com.squareup.picasso:picasso:2.71828'

    // add by songtao --start--
    implementation "androidx.exifinterface:exifinterface:1.3.2"
    implementation("com.squareup.okhttp3:okhttp:4.9.0")
    implementation("com.squareup.okio:okio:2.9.0")
    implementation "androidx.transition:transition:1.3.1"
    implementation "androidx.transition:transition-ktx:1.4.0-rc01"
    // add by songtao --end--
}

checkstyle {
    toolVersion = '7.6.1'
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
}

task checkstyle(type: Checkstyle) {
    description 'Runs Checkstyle inspection against matisse sourcesets.'
    group = 'Code Quality'
    configFile rootProject.file('checkstyle.xml')
    ignoreFailures = false
    showViolations true
    classpath = files()
    source 'src/main/java'
}

// add by songtao --start--
if (file('internal-config.gradle').exists() && file('../binary-common.gradle').exists()) {
    apply from: '../binary-common.gradle'
}
// add by songtao --end--