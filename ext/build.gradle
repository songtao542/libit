apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"

apply from: "../config.gradle"

android {
    compileSdk project.ext.compile_sdk

    namespace 'com.liabit.extension'

    defaultConfig {
        minSdk 21
        targetSdk project.ext.target_sdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    libraryVariants.all { variant ->
        variant.assemble.doLast {
            variant.outputs.all { output ->
                if (output.outputFileName.contains("debug")) {
                    // output project-directory/build/outputs/aar/debug
                    def outputPath = [project.rootDir.absolutePath, "build", "outputs", "aar", "debug"].join(File.separator)
                    copy {
                        from output.outputFile
                        into outputPath
                    }
                } else {
                    // output project-directory/build/outputs/aar/release
                    def outputPath = [project.rootDir.absolutePath, "build", "outputs", "aar", "release"].join(File.separator)
                    copy {
                        from output.outputFile
                        into outputPath
                    }
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.localbroadcastmanager:localbroadcastmanager:${project.androidx_localbroadcastmanager__localbroadcastmanager}"
    implementation "androidx.fragment:fragment-ktx:${project.androidx_fragment__fragment_ktx}"
    implementation "com.google.android.material:material:${project.com_google_android_material__material}"

    // Typed DataStore (Typed API surface, such as Proto)
    implementation "androidx.datastore:datastore:${project.androidx_datastore__datastore}"
    // Alternatively - use the following artifact without an Android dependency.
    implementation "androidx.datastore:datastore-core:${project.androidx_datastore__datastore_core}"
    implementation "androidx.datastore:datastore-preferences:${project.androidx_datastore__datastore_preferences}"
    // Alternatively - use the following artifact without an Android dependency.
    implementation "androidx.datastore:datastore-preferences-core:${project.androidx_datastore__datastore_preferences_core}"

    // optional - RxJava2 support
    //implementation "androidx.datastore:datastore-rxjava2:${project.androidx_datastore__datastore_rxjava2}"
    // optional - RxJava3 support
    //implementation "androidx.datastore:datastore-rxjava3:${project.androidx_datastore__datastore_rxjava3}"
    // optional - RxJava2 support
    //implementation "androidx.datastore:datastore-preferences-rxjava2:${project.androidx_datastore__datastore_preferences_rxjava2}"
    // optional - RxJava3 support
    //implementation "androidx.datastore:datastore-preferences-rxjava3:${project.androidx_datastore__datastore_preferences_rxjava3}"

    implementation "com.google.protobuf:protobuf-javalite:${project.com_google_protobuf__protobuf_javalite}"
    //implementation  "com.google.protobuf.nano:protobuf-javanano:${project.com_google_protobuf_nano__protobuf_javanano}"

    implementation "androidx.navigation:navigation-fragment:${project.androidx_navigation__navigation_fragment}"
    implementation "androidx.navigation:navigation-ui:${project.androidx_navigation__navigation_ui}"
    implementation "androidx.navigation:navigation-fragment-ktx:${project.androidx_navigation__navigation_fragment_ktx}"
    implementation "androidx.navigation:navigation-ui-ktx:${project.androidx_navigation__navigation_ui_ktx}"

    testImplementation "junit:junit:${project.junit__junit}"
    androidTestImplementation "androidx.test:runner:${project.androidx_test__runner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${project.androidx_test_espresso__espresso_core}"
}

//apply from: 'jcenter.gradle'

if (file('binary-config.gradle').exists() && file('../binary-common.gradle').exists()) {
    apply from: '../binary-common.gradle'
}